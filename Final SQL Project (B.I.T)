-- # This file containts answers to questions about an example music dataset with 11 tables, called 'Chinook'. 



-- #1 Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT FirstName
, LastName
, CustomerId
, Country
FROM chinook.customers
WHERE Country != "USA"
;


-- #2 Show only the Customers from Brazil.

SELECT FirstName
, LastName
, CustomerId
, Country
FROM chinook.customers
WHERE Country = "Brazil"
;


-- #3 Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT cust.FirstName
, cust.LastName
, inv.InvoiceId
, inv.InvoiceDate
, inv.BillingCountry
FROM chinook.invoices AS inv

LEFT JOIN chinook.customers cust
ON inv.CustomerID = cust.CustomerId
WHERE Country = "Brazil"
;


-- #4 Show the Employees who are Sales Agents.

SELECT * FROM chinook.Employees
WHERE Title = "Sales Support Agent" 
;


-- #5 Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
FROM chinook.invoices
ORDER BY BillingCountry ASC
;


-- #6 Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT 
emp.EmployeeID
, emp.FirstName
, emp.LastName
, inv.InvoiceId
FROM chinook.employees emp

JOIN chinook.customers cust
ON cust.SupportRepID = emp.EmployeeId

JOIN chinook.invoices inv
ON inv.CustomerId = cust.CustomerID
;


-- #7 Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT
inv.Total AS InvTotal
, cust.FirstName AS CustFirstName
, cust.LastName AS CustLastName
, cust.Country AS CustCountry
, emp.FirstName AS EmpFirstName
, emp.LastName AS EmpLastName
FROM chinook.employees emp

JOIN chinook.customers cust
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.invoices inv
ON inv.CustomerId = cust.CustomerId
;


-- #8 How many Invoices were there in 2009?

SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
;


-- #9 What are the total sales for 2009?

SELECT ROUND (SUM(Total), 2) AS TotalSales
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
;


-- #10 Write a query that includes the purchased track name with each invoice line ID.

SELECT
 t.Name
 , i.InvoiceLineId
FROM chinook.invoice_items i

JOIN chinook.tracks t
ON i.TrackId = t.TrackID
;


-- #11 Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT
ar.Name AS Artist
, t.Name AS Track
, i.InvoiceLineId
FROM chinook.invoice_items i

LEFT JOIN chinook.tracks t
ON i.TrackID = t.TrackID

INNER JOIN chinook.albums a
ON a.AlbumID = t.AlbumID

LEFT JOIN chinook.artists ar
ON ar.ArtistID = a.ArtistID
;


-- #12 Provide a query that shows all the Tracks, and include the Album Name, Genre, and Media Type.

SELECT 
t.Name AS 'Track Name'
, a.Title AS 'Album Title'
, g.Name AS 'Genre'
, m.Name AS 'Media Type'
FROM chinook.tracks t

JOIN chinook.Albums a 
ON a.AlbumId = t.AlbumId

JOIN chinook.Genres g
ON g.GenreId = t.GenreId

JOIN chinook.Media_Types m
ON m.MediaTypeId = t.MediaTypeId
;


-- #13 Show the total sales made by each sales agent.

SELECT
emp.FirstName
, emp.LastName
, ROUND(SUM(inv.Total), 2) AS 'Total Sales'
FROM chinook.employees emp

JOIN chinook.customers cust
ON emp.EmployeeId = cust.SupportRepId

JOIN chinook.invoices inv
ON cust.CustomerId = inv.CustomerId

WHERE emp.Title = 'Sales Support Agent'
GROUP BY emp.FirstName
;


-- #14 Which sales agent made the most dollars in sales in 2009?

SELECT
emp.FirstName
, emp.LastName
, ROUND(SUM(inv.Total), 2) AS 'Total Sales'
FROM chinook.employees emp

JOIN chinook.customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.invoices inv 
ON inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent'
AND inv.InvoiceDate LIKE '2009%'
GROUP BY emp.FirstName, emp.LastName
ORDER BY ROUND(SUM(inv.Total), 2) DESC LIMIT 1
;


-- #15 Show the top 5 customers who spent the most money on purchases.

SELECT
cust.FirstName
, cust.LastName
, cust.CustomerId
, cust.Country
, ROUND(SUM(inv.Total), 2) AS TotalSpent
FROM chinook.customers cust

JOIN chinook.invoices inv
ON inv.CustomerId = cust.CustomerId
GROUP BY cust.CustomerId
ORDER BY TotalSpent DESC LIMIT 5
;


-- #16 List all albums along with the total number of tracks in each album.

SELECT
alb.Title AS AlbumTitle
, COUNT(t.TrackId) AS TotalTracks
FROM chinook.albums alb

JOIN chinook.tracks t 
ON t.AlbumId = alb.AlbumId

GROUP BY alb.AlbumId, alb.Title
ORDER BY TotalTracks DESC
;


-- #17 Find the genre with the highest number of tracks.

SELECT
gen.Name AS GenreName
, COUNT(t.TrackId) AS TotalTracks
FROM chinook.tracks t, chinook.genres gen

WHERE t.GenreId = gen.GenreId
GROUP BY gen.GenreId, gen.Name
ORDER BY TotalTracks DESC LIMIT 1
;


-- #18 Show the average invoice total for each billing country.

SELECT
inv.BillingCountry
, ROUND(AVG(inv.Total), 2) AS AverageInvoiceTotal
FROM chinook.invoices inv

GROUP BY inv.BillingCountry
ORDER BY AverageInvoiceTotal DESC
;


-- #19 Identify the top 3 best-selling tracks of all time.

SELECT
a.Name AS ArtistName,
t.Name AS TrackName
, COUNT(inv.InvoiceId) AS TotalSales
FROM chinook.tracks t

JOIN chinook.invoice_items ii
ON ii.TrackId = t.TrackId

JOIN chinook.invoices inv 
ON inv.InvoiceId = ii.InvoiceId

JOIN chinook.albums alb 
ON t.AlbumId = alb.AlbumId

JOIN chinook.artists a 
ON alb.ArtistId = a.ArtistId

GROUP BY t.TrackId
ORDER BY TotalSales DESC LIMIT 3
;


-- #20 Determine the percentage of total sales contributed by each genre.

SELECT 
g.Name AS Genre
, ROUND(SUM(inv.Total) / total_sales * 100, 2) AS PercentageOfTotalSales
FROM chinook.genres g

JOIN chinook.tracks t 
ON g.GenreId = t.GenreId
    
JOIN chinook.invoice_items ii 
ON t.TrackId = ii.TrackId
    
JOIN chinook.invoices inv 
ON ii.InvoiceId = inv.InvoiceId

CROSS JOIN  (SELECT SUM(Total) AS total_sales FROM chinook.invoices) AS total_sales
GROUP BY g.GenreId, g.Name
ORDER BY PercentageOfTotalSales DESC
;

